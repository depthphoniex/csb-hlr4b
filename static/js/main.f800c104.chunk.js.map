{"version":3,"sources":["App.js","index.js"],"names":["emojidictionry","emojilist","Object","keys","App","useState","translator","settranslator","className","onChange","event","userinput","target","value","undefined","style","textTransform","map","emoji","onClick","emojiclickhandler","display","fontSize","padding","margin","cursor","lineHeight","rootElement","document","getElementById","ReactDOM","render"],"mappings":"sJAIIA,EAAiB,CACnB,eAAM,cACN,eAAM,QACN,eAAM,QACN,eAAM,cACN,eAAM,gBACN,eAAM,OACN,eAAM,aACN,eAAM,cACN,eAAM,WACN,eAAM,QACN,eAAM,WACN,eAAM,eACN,eAAM,QACN,eAAM,gBACN,eAAM,eACN,eAAM,gBAIJC,EAAYC,OAAOC,KAAKH,GAEb,SAASI,IAEtB,IAAI,EAA8BC,mBAAS,IAA3C,mBAAKC,EAAL,KAAiBC,EAAjB,KAcA,OACE,sBAAKC,UAAU,MAAf,UACE,kDAEA,uBAAOC,SAjBX,SAA2BC,GACzB,IAAIC,EAAYD,EAAME,OAAOC,MACzBP,EAAaN,EAAeW,QACbG,IAAfR,IACFA,EAAa,0BAGfC,EAAcD,MAYZ,oBAAIS,MAAO,CAAEC,cAAe,cAA5B,SAA6CV,IAC7C,4CAECL,EAAUgB,KAAI,SAAUC,GACvB,OACE,oBACEC,QAAS,kBAhBnB,SAA2BD,GAEzBX,EADiBP,EAAekB,IAeTE,CAAkBF,IACjCH,MAAO,CAELM,QAAS,SACTC,SAAU,OACVC,QAAS,kBACTC,OAAQ,oBACRC,OAAQ,UACRC,WAAY,KAThB,SAaGR,GAFIA,SC3DjB,IAAMS,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC3B,EAAD,MAEFuB,I","file":"static/js/main.f800c104.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\n\n// declaration of dictionary\nvar emojidictionry = {\n  \"üòÄ\": \"Giring face\",\n  \"üòä\": \"smile\",\n  \"üíò\": \"heart\",\n  \"üíå\": \"love letter\",\n  \"ü•∫\": \"pleading face\",\n  \"üî•\": \"fire\",\n  \"‚úîÔ∏è\": \"check mark\",\n  \"üò¢\": \"crying face\",\n  \"üòî\": \"sad face\",\n  \"‚òÆÔ∏è\": \"peace\",\n  \"üòï\": \"confused\",\n  \"üò®\": \"fearful face\",\n  \"üò†\": \"angry\",\n  \"üïß\": \"twelve-thirty\",\n  \"‚úåÔ∏è\": \"victory hand\",\n  \"üôå\": \"rasing hands\"\n};\n\n// declaration of emojilist for printing dictionry value\nvar emojilist = Object.keys(emojidictionry);\n// processing part\nexport default function App() {\n  // calling of usestate function\n  var [translator, settranslator] = useState(\"\");\n  function emojiinputhandler(event) {\n    var userinput = event.target.value;\n    var translator = emojidictionry[userinput];\n    if (translator === undefined) {\n      translator = \"please check the input\";\n    }\n    // set the value of settranslartor\n    settranslator(translator);\n  }\n  function emojiclickhandler(emoji) {\n    var translator = emojidictionry[emoji];\n    settranslator(translator);\n  }\n  return (\n    <div className=\"App\">\n      <h1>emoji translator</h1>\n      {/* taking input in input area */}\n      <input onChange={emojiinputhandler}></input>\n      {/* output part */}\n      <h2 style={{ textTransform: \"capitalize\" }}>{translator}</h2>\n      <h3>emoji list</h3>\n      {/* print the emoji in emoji dictionary */}\n      {emojilist.map(function (emoji) {\n        return (\n          <h4\n            onClick={() => emojiclickhandler(emoji)}\n            style={{\n              // styling part\n              display: \"inline\",\n              fontSize: \"25px\",\n              padding: \"5px 0px 5px 0px\",\n              margin: \"0px 35px 0px 35px\",\n              cursor: \"pointer\",\n              lineHeight: \"3\"\n            }}\n            key={emoji}\n          >\n            {emoji}\n          </h4>\n        );\n      })}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}